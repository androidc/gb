
переменные

текущая ставка - хранить в GameSession
id вопроса - хранить в GameSession

при нажатии на одну из кнопок
 - при успешном ответе переходит на следующий экран (меняется вопрос и варианты ответов) и увеличивается ставка
 - при неуспешном ответе вылетает алерт "вы проиграли" и игра начинается сначала
 
 Перед этим надо сделать структурку для хранения вопросов, ответов на вопрос и идентификатора правильного ответа +
 
 подсказки сделаем потом, пока мвп
 
 номер текущего вопроса надо хранить в GameSession
 
 после того, как вопросы закончились вылетает алерт "вы выиграли миллион" и игра начинается сначала
 
 Game должен хранить информацию о всех играх, которые были сыграны, в том числе результаты каждой игры.
 
 Создайте синглтон Game и класс GameSession (не синглтон). У Game создайте опциональное свойство типа GameSession. Когда нажимается кнопка «Играть» и начинается игра, создавайте новый GameSession и передайте его синглтону Game. В GameSession храните всю информацию о ходе текущей игры: сколько вопросов было решено правильно, сколько их всего (дополнительно: какие доступные подсказки остались; сколько юзер выиграет денег, если закончит игру). Всю эту информацию GameSession должен получать через delegate от GameViewController — вью-контроллера, на котором происходит игра и нажимаются кнопки ответов.
 
 Когда игра заканчивается, в синглтоне Game посчитайте результат — какой процент от общего числа вопросов получили правильные ответы.
 
 
 
  Сохраните этот результат в синглтоне (подсказка: нужно отдельное свойство, массив результатов игры) и обнулите у него свойство GameSession, так как игра была завершена.
5. Используя паттерн Memento, сохраняйте результаты на диск
 
 
 Добавьте на экран игры лейбл, в котором будет указан номер текущего вопроса и сколько процентов от общего числа вопросов уже получили правильный ответ. С помощью observer (используйте обертку Observable<Type>; если сложно, воспользуйтесь NotificationCenter), следите за этими данными (в вашей архитектуре они должны быть в объекте GameSession) и отображайте на экране в лейбле.
 
 Реализуйте в приложении возможность самому добавить новый вопрос. На экран меню поместите еще одну кнопку — «Добавить вопрос». При нажатии на нее открывается новый экран с формой ввода вопроса. Пользователь заполняет поля, нажимает «Добавить», и этот вопрос добавляется в игру в дополнение к уже существующим (дополнительно: если делали подсказки в модели вопроса, то их поведение сгенерируйте случайным образом — то есть юзер не должен задавать эти поля). Используя паттерн memento, добавьте еще один Caretaker для того, чтобы сохранять созданные юзером вопросы на диск и использовать их при последующих запусках приложения.
 
